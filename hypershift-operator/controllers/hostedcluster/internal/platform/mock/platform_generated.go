// Code generated by MockGen. DO NOT EDIT.
// Source: ./platform.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/openshift/hypershift/api/v1alpha1"
	upsert "github.com/openshift/hypershift/support/upsert"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/rbac/v1"
	reflect "reflect"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockPlatform is a mock of Platform interface
type MockPlatform struct {
	ctrl     *gomock.Controller
	recorder *MockPlatformMockRecorder
}

// MockPlatformMockRecorder is the mock recorder for MockPlatform
type MockPlatformMockRecorder struct {
	mock *MockPlatform
}

// NewMockPlatform creates a new mock instance
func NewMockPlatform(ctrl *gomock.Controller) *MockPlatform {
	mock := &MockPlatform{ctrl: ctrl}
	mock.recorder = &MockPlatformMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPlatform) EXPECT() *MockPlatformMockRecorder {
	return m.recorder
}

// ReconcileCAPIInfraCR mocks base method
func (m *MockPlatform) ReconcileCAPIInfraCR(ctx context.Context, c client.Client, createOrUpdate upsert.CreateOrUpdateFN, hcluster *v1alpha1.HostedCluster, controlPlaneNamespace string, apiEndpoint v1alpha1.APIEndpoint) (client.Object, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileCAPIInfraCR", ctx, c, createOrUpdate, hcluster, controlPlaneNamespace, apiEndpoint)
	ret0, _ := ret[0].(client.Object)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReconcileCAPIInfraCR indicates an expected call of ReconcileCAPIInfraCR
func (mr *MockPlatformMockRecorder) ReconcileCAPIInfraCR(ctx, c, createOrUpdate, hcluster, controlPlaneNamespace, apiEndpoint interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileCAPIInfraCR", reflect.TypeOf((*MockPlatform)(nil).ReconcileCAPIInfraCR), ctx, c, createOrUpdate, hcluster, controlPlaneNamespace, apiEndpoint)
}

// CAPIProviderDeploymentSpec mocks base method
func (m *MockPlatform) CAPIProviderDeploymentSpec(hcluster *v1alpha1.HostedCluster, tokenMinterImage string) (*v1.DeploymentSpec, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CAPIProviderDeploymentSpec", hcluster, tokenMinterImage)
	ret0, _ := ret[0].(*v1.DeploymentSpec)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CAPIProviderDeploymentSpec indicates an expected call of CAPIProviderDeploymentSpec
func (mr *MockPlatformMockRecorder) CAPIProviderDeploymentSpec(hcluster, tokenMinterImage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CAPIProviderDeploymentSpec", reflect.TypeOf((*MockPlatform)(nil).CAPIProviderDeploymentSpec), hcluster, tokenMinterImage)
}

// ReconcileCredentials mocks base method
func (m *MockPlatform) ReconcileCredentials(ctx context.Context, c client.Client, createOrUpdate upsert.CreateOrUpdateFN, hcluster *v1alpha1.HostedCluster, controlPlaneNamespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileCredentials", ctx, c, createOrUpdate, hcluster, controlPlaneNamespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileCredentials indicates an expected call of ReconcileCredentials
func (mr *MockPlatformMockRecorder) ReconcileCredentials(ctx, c, createOrUpdate, hcluster, controlPlaneNamespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileCredentials", reflect.TypeOf((*MockPlatform)(nil).ReconcileCredentials), ctx, c, createOrUpdate, hcluster, controlPlaneNamespace)
}

// ReconcileSecretEncryption mocks base method
func (m *MockPlatform) ReconcileSecretEncryption(ctx context.Context, c client.Client, createOrUpdate upsert.CreateOrUpdateFN, hcluster *v1alpha1.HostedCluster, controlPlaneNamespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileSecretEncryption", ctx, c, createOrUpdate, hcluster, controlPlaneNamespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileSecretEncryption indicates an expected call of ReconcileSecretEncryption
func (mr *MockPlatformMockRecorder) ReconcileSecretEncryption(ctx, c, createOrUpdate, hcluster, controlPlaneNamespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileSecretEncryption", reflect.TypeOf((*MockPlatform)(nil).ReconcileSecretEncryption), ctx, c, createOrUpdate, hcluster, controlPlaneNamespace)
}

// CAPIProviderPolicyRules mocks base method
func (m *MockPlatform) CAPIProviderPolicyRules() []v10.PolicyRule {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CAPIProviderPolicyRules")
	ret0, _ := ret[0].([]v10.PolicyRule)
	return ret0
}

// CAPIProviderPolicyRules indicates an expected call of CAPIProviderPolicyRules
func (mr *MockPlatformMockRecorder) CAPIProviderPolicyRules() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CAPIProviderPolicyRules", reflect.TypeOf((*MockPlatform)(nil).CAPIProviderPolicyRules))
}
